# Generated by Django 2.2.19 on 2021-03-15 16:17

import json
from collections import namedtuple

import api_basebone.core.fields
from django.db import migrations


class SortConverter(namedtuple('SortConverter', ['reverse'])):
    def convert(self, array):
        for exp in array:
            if not self.reverse:
                yield json.dumps(exp)
            else:
                try:
                    yield json.loads(exp)
                except:
                    pass

    def __call__(self, apps, schema_editor):
        chart_model = apps.get_model('chart', 'Chart')
        charts = chart_model.objects.using(schema_editor.connection.alias).only('sort_keys').all()
        for chart in charts:
            chart.sort_keys = list(self.convert(chart.sort_keys))
        chart_model.objects.using(schema_editor.connection.alias).bulk_update(charts, fields=['sort_keys'])


class Migration(migrations.Migration):

    dependencies = [
        ('chart', '0023_auto_20210315_1537'),
    ]

    operations = [
        migrations.RunPython(SortConverter(reverse=False), reverse_code=SortConverter(reverse=True)),
        migrations.AlterField(
            model_name='chart',
            name='sort_keys',
            field=api_basebone.core.fields.JSONField(default=[], verbose_name='排序表达式'),
        ),
    ]
